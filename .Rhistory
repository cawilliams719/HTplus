dplyr::rename(Tmax = monthlymaximumtemperature, Tmean = monthlymeantemperature, Tmin = monthlyminimumtemperature) %>% pivot_wider(names_from = date, values_from = date, names_sep = "-")
View(NE1_select)
#NE 1
# clean up data a bit
NE1_select <- NE1[[1]] %>%
select(station, date, latitude, longitude, elevation, name, monthlymaximumtemperature, monthlymeantemperature, monthlyminimumtemperature) %>%
arrange(monthlymaximumtemperature, monthlymeantemperature,monthlyminimumtemperature) %>% filter(monthlymeantemperature > 0) %>%
dplyr::rename(Tmax = monthlymaximumtemperature, Tmean = monthlymeantemperature, Tmin = monthlyminimumtemperature) %>% separate(., "date", c("Year", "Month", "Day"), sep = "-")
View(NE1_select)
#NE 1
# clean up data a bit
NE1_select <- NE1[[1]] %>%
select(station, date, latitude, longitude, elevation, name, monthlymaximumtemperature, monthlymeantemperature, monthlyminimumtemperature) %>%
arrange(monthlymaximumtemperature, monthlymeantemperature,monthlyminimumtemperature) %>% filter(monthlymeantemperature > 0) %>%
dplyr::rename(Tmax = monthlymaximumtemperature, Tmean = monthlymeantemperature, Tmin = monthlyminimumtemperature) %>% separate(., "date", c("Year", "Month"), sep = "-")
#NE 1
# clean up data a bit
NE1_select <- NE1[[1]] %>%
select(station, date, latitude, longitude, elevation, name, monthlymaximumtemperature, monthlymeantemperature, monthlyminimumtemperature) %>%
arrange(monthlymaximumtemperature, monthlymeantemperature,monthlyminimumtemperature) %>% filter(monthlymeantemperature > 0) %>%
dplyr::rename(Tmax = monthlymaximumtemperature, Tmean = monthlymeantemperature, Tmin = monthlyminimumtemperature) %>% separate(., "date", c("year", "month"), sep = "-")
#NE 1
# clean up data a bit
NE1_select <- NE1[[1]] %>%
select(station, date, latitude, longitude, elevation, name, monthlymaximumtemperature, monthlymeantemperature, monthlyminimumtemperature) %>%
arrange(monthlymaximumtemperature, monthlymeantemperature,monthlyminimumtemperature) %>% filter(monthlymeantemperature > 0) %>%
dplyr::rename(Tmax = monthlymaximumtemperature, Tmean = monthlymeantemperature, Tmin = monthlyminimumtemperature) %>% separate(., "date", c("year", "month"), sep = "-") %>% filter(month = "07")
# after maybe write objects out as csvs?
View(NE1_select)
NE1_select2 <- NE1_select %>% filter(month = "07")
# July Temperatures
NE1_select2 <- NE1_select %>% filter(month == "07")
View(NE1_select2)
NE1_select3 <- NE1_select2 %>% summarise_all(Tmin = mean(Tmin), Tmeann = mean(Tmean), Tmax = mean(Tmax))
NE1_select3 <- NE1_select2 %>% summarise_all(Tmin = mean(Tmin))
NE1_select3 <- NE1_select2 %>% summarise(Tmin = mean(Tmin), Tmeann = mean(Tmean), Tmax = mean(Tmax))
View(NE1_select3)
NE1_select3 <- NE1_select2 %>% summarize_all(mean(Tmin, Tmean, Tmax))
NE1_select3 <- NE1_select2 %>% summarize_all(mean(Tmax, Tmean, Tmin))
NE1_select3 <- NE1_select2 %>% summarize_all(mean("Tmax", "Tmean", "Tmin"))
rm(i)
rm(NE1_2005)
rm(NE1_2005_2010)
rm(NE1_2005_2014)
rm(NE1_2005_data)
rm(NE1_2006_2014)
rm(NE1_2011_2014)
rm(NE1_merge1)
rm(NE1_merge2)
rm(NE1_merge3)
save.image("~/Projects/HTplus/data/lcd_stat/NE1_select.RData")
browseVignettes("geospaar")
NE1_sf <- st_as_sf(NE1_summary, coords = c("latitude", "longitude"))
load("~/Projects/HTplus/data/lcd_stat/NE1_select.RData")
NE1_sf <- st_as_sf(NE1_summary, coords = c("latitude", "longitude"), crs = 5070)
# Bounding box
st_bbox(NE1_sf)
coords <- cbind("x" = c(40.12028, 41.78570, 41.78570, 40.12028, 40.12028),
"y" = c(-80.64722, -80.64722, -73.74220, -73.74220, -80.64722))
NE1_bbox_sf <- st_polygon(list(coords))
# plot
par(mar = c(0, 0, 0, 0))
plot(st_geometry(NE1_sf), col = "grey")
plot(st_geometry(NE1_buffer), add = TRUE)
# buffer
NE1_buffer <- NE1_sf %>% st_buffer(dist = 495 %>% units::set_units("m"))
# window test
NE1_window <- lapply(NE1_buffer$geometry, st_bbox)
coords_t <- cbind("x" = c(-453.9907, 536.0093, 536.0093, -453.9907, -453.9907),
"y" = c(-569.7363, -569.7363, 420.2637, 420.2637, -569.7363))
NE1_window_sf <- st_polygon(list(coords_t))
library(rnoaa)
library(dplyr)
library(tidyr)
library(vctrs)
library(plyr)
library(HTplus)
library(sf)
library(ggplot2)
library(maptools)
NE1_sf <- st_as_sf(NE1_summary, coords = c("latitude", "longitude"), crs = 5070)
# Bounding box
st_bbox(NE1_sf)
coords <- cbind("x" = c(40.12028, 41.78570, 41.78570, 40.12028, 40.12028),
"y" = c(-80.64722, -80.64722, -73.74220, -73.74220, -80.64722))
NE1_bbox_sf <- st_polygon(list(coords))
# plot
par(mar = c(0, 0, 0, 0))
plot(st_geometry(NE1_sf), col = "grey")
plot(st_geometry(NE1_buffer), add = TRUE)
# buffer
NE1_buffer <- NE1_sf %>% st_buffer(dist = 495 %>% units::set_units("m"))
# window test
NE1_window <- lapply(NE1_buffer$geometry, st_bbox)
coords_t <- cbind("x" = c(-453.9907, 536.0093, 536.0093, -453.9907, -453.9907),
"y" = c(-569.7363, -569.7363, 420.2637, 420.2637, -569.7363))
NE1_window_sf <- st_polygon(list(coords_t))
View(NE1_window_sf)
NE1_buffer <- NE1_sf %>% st_buffer(dist = 495 %>% units::set_units("m")) %>% st_transform(crs = 5070)
NE1_window <- lapply(NE1_buffer$geometry, st_bbox)
coords_t <- cbind("x" = c(-453.9907, 536.0093, 536.0093, -453.9907, -453.9907),
"y" = c(-569.7363, -569.7363, 420.2637, 420.2637, -569.7363))
NE1_window_sf <- st_polygon(list(coords_t))
# plot
par(mar = c(0, 0, 0, 0))
plot(st_geometry(NE1_sf), col = "grey")
plot(st_geometry(NE1_window_sf), add = TRUE)
par(mar = c(0, 0, 0, 0))
plot(st_geometry(NE1_sf), col = "grey")
plot(st_geometry(NE1_window_sf), col = "transparent", add = TRUE)
par(mar = c(0, 0, 0, 0))
plot(st_geometry(NE1_sf), col = "grey")
plot(st_geometry(NE1_window_sf), col = "red", add = TRUE)
par(mar = c(0, 0, 0, 0))
plot(st_geometry(NE1_sf), col = "grey")
plot(st_geometry(NE1_buffer), col = "red", add = TRUE)
par(mar = c(0, 0, 0, 0))
plot(st_geometry(NE1_sf), col = "grey")
plot(st_geometry(NE1_buffer), col = "transparent", add = TRUE)
par(mar = c(0, 0, 0, 0))
plot(st_geometry(NE1_sf), col = "grey")
plot(st_geometry(NE1_bbox_sf), col = "transparent", add = TRUE)
NE1_buffer <- NE1_sf %>% st_buffer(dist = 495 %>% units::set_units("m")) %>% st_transform(crs = 5070)
par(mar = c(0, 0, 0, 0))
plot(st_geometry(NE1_sf), col = "grey")
plot(st_geometry(NE1_buffer), col = "transparent", add = TRUE)
# buffer
NE1_buffer <- NE1_sf %>% st_buffer(dist = .495 %>% units::set_units("m")) %>% st_transform(crs = 5070)
par(mar = c(0, 0, 0, 0))
plot(st_geometry(NE1_sf), col = "grey")
plot(st_geometry(NE1_buffer), col = "transparent", add = TRUE)
NE1_buffer <- NE1_sf %>% st_transform(crs = 5070) %>% st_buffer(dist = 495 %>% units::set_units("m"))
par(mar = c(0, 0, 0, 0))
plot(st_geometry(NE1_sf), col = "grey")
plot(st_geometry(NE1_buffer), col = "transparent", add = TRUE)
NE1_buffer <- NE1_sf %>% st_transform(crs = 5070) %>% st_buffer(dist = 495)
par(mar = c(0, 0, 0, 0))
plot(st_geometry(NE1_sf), col = "grey")
plot(st_geometry(NE1_buffer), col = "transparent", add = TRUE)
st_crs(st_buffer())
st_Crs(NE1_buffer)
st_crs(NE1_buffer)
NE1_buffer <- NE1_sf %>% st_transform(crs = 102003) %>% st_buffer(dist = 495 %>% units::set_units("m"))
NE1_buffer <- NE1_sf %>% st_transform(crs = 5070) %>% st_buffer(dist = 495 %>% units::set_units("m"))
NE1_buffer <- NE1_sf %>% st_transform(crs = 5070) %>% st_buffer(dist = 495 %>% units::set_units("km"))
par(mar = c(0, 0, 0, 0))
plot(st_geometry(NE1_sf), col = "grey")
plot(st_geometry(NE1_buffer), col = "transparent", add = TRUE)
NE1_buffer <- NE1_sf %>% st_transform(crs = 5070) %>% st_buffer(dist = 495 %>% units::set_units("mm"))
par(mar = c(0, 0, 0, 0))
plot(st_geometry(NE1_sf), col = "grey")
plot(st_geometry(NE1_buffer), col = "transparent", add = TRUE)
NE1_buffer <- NE1_sf %>% st_transform(crs = 5070) %>% st_buffer(dist = 495 %>% units::set_units("mm"))
NE1_window <- lapply(NE1_buffer$geometry, st_bbox)
NE1_window[[1]]
# buffer
NE1_buffer <- NE1_sf %>% st_transform(crs = 5070) %>% st_buffer(dist = 495 %>% units::set_units("mm"))
par(mar = c(0, 0, 0, 0))
plot(st_geometry(NE1_sf), col = "grey")
plot(st_geometry(NE1_buffer), col = "transparent", add = TRUE)
NE1_window[[1]]
coords_t <- cbind("x" = c(-40.51428, 41.50428, 41.50428, 40.51428, 40.51428),
"y" = c(-75.23133, -75.23133, -74.24133, -74.24133, -75.23133))
NE1_window_sf <- st_polygon(list(coords_t))
coords_t <- cbind("x" = c(-40.51428, 41.50428, 41.50428, -40.51428, -40.51428),
"y" = c(-75.23133, -75.23133, -74.24133, -74.24133, -75.23133))
NE1_window_sf <- st_polygon(list(coords_t))
par(mar = c(0, 0, 0, 0))
plot(st_geometry(NE1_sf), col = "grey")
plot(st_geometry(NE1_window_sf), col = "transparent", add = TRUE)
NE1_window_sf <- st_polygon(list(coords_t)) %>% st_transform(crs = 5070)
par(mar = c(0, 0, 0, 0))
plot(st_geometry(NE1_sf), col = "grey")
plot(st_geometry(NE1_window_sf), col = "transparent", add = TRUE)
# buffer
NE1_buffer <- NE1_sf %>% st_transform(crs = 5070) %>% st_buffer(dist = 495 %>% units::set_units("m"))
NE1_window <- lapply(NE1_buffer$geometry, st_bbox)
NE1_window[[1]]
NE1_buffer <- NE1_sf %>% st_transform(crs = 5070) %>% st_buffer(dist = 495)
NE1_window[[1]]
browseVignettes("geospaar")
browseVignettes()
install.packages("RPyGeo")
library(RPyGeo)
arcpy <- rpygeo_build_env(workspace = tempdir(),
overwrite = TRUE,
extensions = "Spatial")
install.packages("Rpy")
install.packages("rpy2")
install.packages("reticulate")
install.packages("reticulate")
library(reticulate)
n
reticulate::repl_python()
library(reticulate)
no
library(reticulate)
reticulate::repl_python()
library(reticulate)
load("~/Projects/HTplus/data/lcd_stat/NE1_select.RData")
View(NE1_summary)
NE1_sf <- st_as_sf(NE1_summary, coords = c("latitude", "longitude"), crs = 5070)
# Bounding box
st_bbox(NE1_sf)
coords <- cbind("x" = c(40.12028, 41.78570, 41.78570, 40.12028, 40.12028),
"y" = c(-80.64722, -80.64722, -73.74220, -73.74220, -80.64722))
NE1_bbox_sf <- st_polygon(list(coords))
# plot
par(mar = c(0, 0, 0, 0))
plot(st_geometry(NE1_sf), col = "grey")
plot(st_geometry(NE1_window_sf), col = "transparent", add = TRUE)
# buffer
NE1_buffer <- NE1_sf %>% st_transform(crs = 5070) %>% st_buffer(dist = 495) %>% units::set_units("m"))
# window test
NE1_window <- lapply(NE1_buffer$geometry, st_bbox)
coords_t <- cbind("x" = c(-40.51428, 41.50428, 41.50428, -40.51428, -40.51428),
"y" = c(-75.23133, -75.23133, -74.24133, -74.24133, -75.23133))
NE1_window_sf <- st_polygon(list(coords_t))
library(rnoaa)
library(dplyr)
library(tidyr)
library(vctrs)
library(plyr)
library(HTplus)
library(sf)
library(ggplot2)
library(maptools)
NE1_sf <- st_as_sf(NE1_summary, coords = c("latitude", "longitude"), crs = 5070)
# Bounding box
st_bbox(NE1_sf)
coords <- cbind("x" = c(40.12028, 41.78570, 41.78570, 40.12028, 40.12028),
"y" = c(-80.64722, -80.64722, -73.74220, -73.74220, -80.64722))
NE1_bbox_sf <- st_polygon(list(coords))
# plot
par(mar = c(0, 0, 0, 0))
plot(st_geometry(NE1_sf), col = "grey")
plot(st_geometry(NE1_window_sf), col = "transparent", add = TRUE)
# buffer
NE1_buffer <- NE1_sf %>% st_transform(crs = 5070) %>% st_buffer(dist = 495) %>% units::set_units("m")
# window test
NE1_window <- lapply(NE1_buffer$geometry, st_bbox)
coords_t <- cbind("x" = c(-40.51428, 41.50428, 41.50428, -40.51428, -40.51428),
"y" = c(-75.23133, -75.23133, -74.24133, -74.24133, -75.23133))
NE1_window_sf <- st_polygon(list(coords_t))
plot(st_geometry(NE1_sf))
library(rnoaa)
library(dplyr)
library(tidyr)
library(vctrs)
library(plyr)
library(HTplus)
library(sf)
library(ggplot2)
library(maptools)
library(rgdal)
NE1_sf <- st_as_sf(NE1_summary, coords = c("latitude", "longitude"), crs = 5070)
NE1_pts <- system.file("D:/r_outputs/NE1_pts.shp", package = "HTplus") %>%
st_write
NE1_pts <- system.file(NE1_sf, "D:/r_outputs/NE1_pts.shp", package = "HTplus") %>%
st_write
?system.file()
write_sf(NE1_sf, dsn = "D:/r_outputs/NE1_pts.shp")
?raster
nlcd_2005 <- raster("D:/data/landcover_2005_vote.tif")
library(FedData)
library(sp)
library(utils)
library(raster)
nlcd_2005 <- raster("D:/data/landcover_2005_vote.tif")
plot_noaxes(nlcd_2005)
library(geospaar)
nlcd_2005 <- raster("D:/data/landcover_2005_vote.tif")
plot_noaxes(nlcd_2005)
reclass <- cbind(c(20, 24), c(20, 24), 1:3)
View(reclass)
browseVignettes("caw346")
reclass <- cbind(c(11, 12, 22, 23, 24, 31, 41, 42, 43, 51, 52, 71, 72, 73, 74, 81, 82, 90, 95), 1:19)
View(reclass)
nlcd_2005_reclass <- reclassify(x = nlcd_2005, rcl = reclass, include.lowest = TRUE)
gray = rgb(.5,.5,.5)*0.8
ltbrown = rgb(204,102,0)
black = rgb(0,0,0)
navy = rgb(0,0,204)
brown = rgb(153,76,0)
ltbrown = rgb(204,102,0)
black = rgb(0,0,0)
white = rgb(1,1,1)
gray = rgb(.5,.5,.5)*1.2
gray = rgb(.5,.5,.5)*1
gray = rgb(.5,.5,.5)*0.8
gray = rgb(.5,.5,.5)*0.5
orange = rgb(255,165,0)
ltorange = rgb(255,153,51)
ltblue = rgb(173,216,230)
magenta = rgb(255,0,255)
yellow = rgb(255,255,0)
ltyellow = rgb(255,255,102)
darkgreen = rgb(0,102,0)
brightgreen = rgb(51, 255, 51)
ltgreen = rgb(178,255,102)
medgreen = rgb(76,153,0)
veryltgreen = rgb(204,255,205)
medltgreen =  rgb(204,255,153)
mauve = rgb(153,153,0)
?rgb
rgb(0,0,204)
black = rgb(0,0,0)
navy = rgb(0,0,204/255)
brown = rgb(153/255,76/255,0/255)
navy = rgb(0/255,0/255,204/255)
brown = rgb(153/255,76/255,0/255)
gray1.2 = rgb(.5/255,.5/255,.5/255)*1.2
gray1 = rgb(.5/255,.5/255,.5/255)*1
gray.8 = rgb(.5/255,.5/255,.5/255)*0.8
gray = rgb(.5/255,.5/255,.5/255)
gray1.2 = gray*1.2
gray1.2 = gray.*1.2
gray1.2 = rgb(.5/255*1.2,.5/255*1.2,.5/255*1.2)
navy = rgb(0/255,0/255,204/255)
brown = rgb(153/255,76/255,0/255)
ltbrown = rgb(204/255,102/255,0/255)
black = rgb(0/255,0/255,0/255)
white = rgb(1/255,1/255,1/255)
gray1.2 = rgb(.5/255*1.2,.5/255*1.2,.5/255*1.2)
gray1 = rgb(.5/255,.5/255,.5/255)
gray.8 = rgb(.5/255*0.8,.5/255*0.8,.5/255*0.8)
gray.5 = rgb(.5/255*0.5,.5/255*0.5,.5/255*0.5)
orange = rgb(255/255,165/255,0/255)
ltorange = rgb(255/255,153/255,51/255)
ltblue = rgb(173/255,216/255,230/255)
magenta = rgb(255/255,0/255,255/255)
yellow = rgb(255/255,255/255,0/255)
ltyellow = rgb(255/255,255/255,102/255)
darkgreen = rgb(0/255,102/255,0/255)
brightgreen = rgb(51/255, 255/255, 51/255)
ltgreen = rgb(178/255,255/255,102/255)
medgreen = rgb(76/255,153/255,0/255)
veryltgreen = rgb(204/255,255/255,205/255)
medltgreen =  rgb(204/255,255/255,153/255)
mauve = rgb(153/255,153/255,0/255)
# Land cover classes
nlcdclassname <-  c('Open Water','Perennial Ice/Snow', 'Developed, Open Space',
'Developed, Low Intensity','Developed, Medium Intensity','Developed High Intensity',
'Barren Land','Deciduous Forest','Evergreen Forest','Mixed Forest',
'Dwarf Scrub','Shrub/Scrub','Grassland/Herbaceous','Sedge/Herbaceous',
'Lichens','Moss','Pasture/Hay','Cultivated Crops','Woody Wetlands',
'Emergent Herbaceous Wetlands')
# Defining Colors
navy = rgb(0/255,0/255,204/255)
brown = rgb(153/255,76/255,0/255)
ltbrown = rgb(204/255,102/255,0/255)
ltbrown1.2 = rgb(204/255*1.2,102*1.2/255,0/255*1.2)
black = rgb(0/255,0/255,0/255)
white = rgb(1/255,1/255,1/255)
gray1.2 = rgb(.5/255*1.2,.5/255*1.2,.5/255*1.2)
gray1 = rgb(.5/255,.5/255,.5/255)
gray.8 = rgb(.5/255*0.8,.5/255*0.8,.5/255*0.8)
gray.5 = rgb(.5/255*0.5,.5/255*0.5,.5/255*0.5)
orange = rgb(255/255,165/255,0/255)
ltorange = rgb(255/255,153/255,51/255)
ltblue = rgb(173/255,216/255,230/255)
ltblue.8 = rgb(173/255*0.8,216/255*0.8,230/255*0.8)
magenta = rgb(255/255,0/255,255/255)
yellow = rgb(255/255,255/255,0/255)
ltyellow = rgb(255/255,255/255,102/255)
darkgreen = rgb(0/255,102/255,0/255)
brightgreen = rgb(51/255, 255/255, 51/255)
ltgreen = rgb(178/255,255/255,102/255)
medgreen = rgb(76/255,153/255,0/255)
veryltgreen = rgb(204/255,255/255,205/255)
medltgreen =  rgb(204/255,255/255,153/255)
mauve = rgb(153/255,153/255,0/255)
nlcd_col <- nlcdclassname <-  c('navy','white', 'gray1.2',
'gray1','gray.8','gray.5',
'brown','ltgreen','darkgreen','medgreen',
'ltbrown1.2','ltbrown','ltyellow','mauve',
'veryltgreen','medltgreen','yellow','magenta','ltblue.8',
'ltblue')
nlcd_2005
# plot mean temperature
plot_noaxes(nlcd_2005, legend = FALSE, main = "NLCD 2005 Data", col =
nlcd_col,
mar = c(1, 1, 2, 1))
legend(x = "right", legend = nlcdclassname,
pch = 15, pt.cex = 3, col = nlcd_col, bty = "n")
# reclassification matrix
reclass <- cbind(c(11, 12, 22, 23, 24, 31, 41, 42, 43, 51,
52, 71, 72, 73, 74, 81, 82, 90, 95), 1:19)
# reclassify raw landcover data
nlcd_2005_reclass <- reclassify(x = nlcd_2005, rcl = reclass, include.lowest = TRUE)
# Land cover classes
nlcdclassname <-  c('Open Water','Perennial Ice/Snow', 'Developed, Open Space',
'Developed, Low Intensity','Developed, Medium Intensity','Developed High Intensity',
'Barren Land','Deciduous Forest','Evergreen Forest','Mixed Forest',
'Dwarf Scrub','Shrub/Scrub','Grassland/Herbaceous','Sedge/Herbaceous',
'Lichens','Moss','Pasture/Hay','Cultivated Crops','Woody Wetlands',
'Emergent Herbaceous Wetlands')
# Defining Colors
navy = rgb(0/255,0/255,204/255)
brown = rgb(153/255,76/255,0/255)
ltbrown = rgb(204/255,102/255,0/255)
ltbrown1.2 = rgb(204/255*1.2,102*1.2/255,0/255*1.2)
black = rgb(0/255,0/255,0/255)
white = rgb(1/255,1/255,1/255)
gray1.2 = rgb(.5/255*1.2,.5/255*1.2,.5/255*1.2)
gray1 = rgb(.5/255,.5/255,.5/255)
gray.8 = rgb(.5/255*0.8,.5/255*0.8,.5/255*0.8)
gray.5 = rgb(.5/255*0.5,.5/255*0.5,.5/255*0.5)
orange = rgb(255/255,165/255,0/255)
ltorange = rgb(255/255,153/255,51/255)
ltblue = rgb(173/255,216/255,230/255)
ltblue.8 = rgb(173/255*0.8,216/255*0.8,230/255*0.8)
magenta = rgb(255/255,0/255,255/255)
yellow = rgb(255/255,255/255,0/255)
ltyellow = rgb(255/255,255/255,102/255)
darkgreen = rgb(0/255,102/255,0/255)
brightgreen = rgb(51/255, 255/255, 51/255)
ltgreen = rgb(178/255,255/255,102/255)
medgreen = rgb(76/255,153/255,0/255)
veryltgreen = rgb(204/255,255/255,205/255)
medltgreen =  rgb(204/255,255/255,153/255)
mauve = rgb(153/255,153/255,0/255)
nlcd_col <- nlcdclassname <-  c('navy','white', 'gray1.2',
'gray1','gray.8','gray.5',
'brown','ltgreen','darkgreen','medgreen',
'ltbrown1.2','ltbrown','ltyellow','mauve',
'veryltgreen','medltgreen','yellow','magenta','ltblue.8',
'ltblue')
# plot mean temperature
plot_noaxes(nlcd_2005_reclass, legend = FALSE, main = "NLCD 2005 Data", col =
nlcd_col,
mar = c(1, 1, 2, 1))
legend(x = "right", legend = nlcdclassname,
pch = 15, pt.cex = 3, col = nlcd_col, bty = "n")
# Land cover classes
nlcdclassname <-  c('Open Water','Perennial Ice/Snow', 'Developed, Open Space',
'Developed, Low Intensity','Developed, Medium Intensity','Developed High Intensity',
'Barren Land','Deciduous Forest','Evergreen Forest','Mixed Forest',
'Dwarf Scrub','Shrub/Scrub','Grassland/Herbaceous','Sedge/Herbaceous',
'Lichens','Moss','Pasture/Hay','Cultivated Crops','Woody Wetlands',
'Emergent Herbaceous Wetlands')
# Defining Colors
navy = rgb(0/255,0/255,204/255)
brown = rgb(153/255,76/255,0/255)
ltbrown = rgb(204/255,102/255,0/255)
ltbrown1.2 = rgb(204/255*1.2,102*1.2/255,0/255*1.2)
black = rgb(0/255,0/255,0/255)
white = rgb(1/255,1/255,1/255)
gray1.2 = rgb(.5/255*1.2,.5/255*1.2,.5/255*1.2)
gray1 = rgb(.5/255,.5/255,.5/255)
gray.8 = rgb(.5/255*0.8,.5/255*0.8,.5/255*0.8)
gray.5 = rgb(.5/255*0.5,.5/255*0.5,.5/255*0.5)
orange = rgb(255/255,165/255,0/255)
ltorange = rgb(255/255,153/255,51/255)
ltblue = rgb(173/255,216/255,230/255)
ltblue.8 = rgb(173/255*0.8,216/255*0.8,230/255*0.8)
magenta = rgb(255/255,0/255,255/255)
yellow = rgb(255/255,255/255,0/255)
ltyellow = rgb(255/255,255/255,102/255)
darkgreen = rgb(0/255,102/255,0/255)
brightgreen = rgb(51/255, 255/255, 51/255)
ltgreen = rgb(178/255,255/255,102/255)
medgreen = rgb(76/255,153/255,0/255)
veryltgreen = rgb(204/255,255/255,205/255)
medltgreen =  rgb(204/255,255/255,153/255)
mauve = rgb(153/255,153/255,0/255)
nlcd_col <- nlcdclassname <-  c('navy','white', 'gray1.2',
'gray1','gray.8','gray.5',
'brown','ltgreen','darkgreen','medgreen',
'ltbrown1.2','ltbrown','ltyellow','mauve',
'veryltgreen','medltgreen','yellow','magenta','ltblue.8',
'ltblue')
# plot mean temperature
plot_noaxes(nlcd_2005, legend = FALSE, main = "NLCD 2005 Data", col =
nlcd_col,
mar = c(1, 1, 2, 1))
legend(x = "right", legend = nlcdclassname,
pch = 15, pt.cex = 3, col = nlcd_col, bty = "n")
load("~/Projects/HTplus/data/lcd_stat/NE1_select.RData")
# read in raw raster image
nlcd_2005 <- raster("D:/data/landcover_2005_vote.tif")
plot_noaxes(nlcd_2005)
# Load Packages
library(FedData)
library(sp)
library(utils)
library(raster)
library(geospaar)
# NLCD urls for landcover vote data for 2005 to 2014
urls <- list("ftp://islay.ceoas.oregonstate.edu/cms/v1/landcover/vote/landcover_2005_vote.zip",
"ftp://islay.ceoas.oregonstate.edu/cms/v1/landcover/vote/landcover_2006_vote.zip",
"ftp://islay.ceoas.oregonstate.edu/cms/v1/landcover/vote/landcover_2007_vote.zip",
"ftp://islay.ceoas.oregonstate.edu/cms/v1/landcover/vote/landcover_2008_vote.zip",
"ftp://islay.ceoas.oregonstate.edu/cms/v1/landcover/vote/landcover_2009_vote.zip",
"ftp://islay.ceoas.oregonstate.edu/cms/v1/landcover/vote/landcover_2010_vote.zip",
"ftp://islay.ceoas.oregonstate.edu/cms/v1/landcover/vote/landcover_2011_vote.zip",
"ftp://islay.ceoas.oregonstate.edu/cms/v1/landcover/vote/landcover_2012_vote.zip",
"ftp://islay.ceoas.oregonstate.edu/cms/v1/landcover/vote/landcover_2013_vote.zip",
"ftp://islay.ceoas.oregonstate.edu/cms/v1/landcover/vote/landcover_2014_vote.zip")
nlcd_dir <- "D:/data" # specify the file path for the output NLCD raster data output
# iterate through .zip files downloading landcover data for CONUS
for (i in urls) {
tmp <- tempfile(tmpdir = nlcd_dir, fileext = ".zip")
download.file(i, tmp)
unzip(tmp,exdir = nlcd_dir)
unlink(tmp)
fp <- list.files(path = nlcd_dir, full.names = TRUE, pattern = "nlcd_vote")
fp <- gsub("/", "\\\\", fp)
}
# read in raw raster image
nlcd_2005 <- raster("D:/data/landcover_2005_vote.tif")
plot_noaxes(nlcd_2005)
